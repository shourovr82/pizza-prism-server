generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Prisma schema

model User {
  userId     String     @id @default(uuid())
  email      String     @unique
  password   String
  userStatus UserStatus @default(ACTIVE)
  createdAt  DateTime   @default(now()) @db.Timestamptz(0)
  updatedAt  DateTime   @updatedAt @db.Timestamptz(0)
  role       UserRoles
  profile    Profile?

  @@map("users")
}

model Profile {
  profileId    String   @id @default(uuid())
  firstName    String
  lastName     String
  phoneNumber  String?
  profileImage String?
  createdAt    DateTime @default(now()) @db.Timestamptz(0)
  updatedAt    DateTime @updatedAt @db.Timestamptz(0)
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [userId])

  @@map("customers")
}

model Service {
  serviceId                 String                   @id @default(uuid())
  servicePriceRange         String?
  serviceDescription        String?
  serviceLocation           String?
  serviceCancellationPolicy String?
  serviceAvailability       ServiceAvailabilityEnum?
  serviceType               ServiceType?
  ownerId                   String?                  @unique
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt

  @@map("Services")
}

// enums
enum UserStatus {
  ACTIVE
  PAUSED
  SUSPENDED
}

enum ServiceType {
  TENANT_SCREENING
  MAINTENANCE_AND_REPAIR
  CLEANING
  PEST_CONTROL
  LAWN_CARE
  SECURITY_AND_SAFETY
  INSURANCE
  INSPECTION
  MARKETING
  TECHNOLOGY
}

enum ServiceAvailabilityEnum {
  LOW_PRIORITY
  MEDIUM_PRIORITY
  HIGH_PRIORITY
  ALL_PRIORITIES
}

enum UserRoles {
  SUPERADMIN
  CUSTOMER
  DELIVERYMAN
  CASHIER
}
